setwd("~/")
setwd("D:/Programming/R")
setwd("D:/Programming/R/Plotting/Pie Chart")
ls()
list=ls()
rm(list)
ls()
rm(list=ls())
a <-0
rm(ls())
rm(b=ls())
rm(list = ls())
ls()
getwd()
setwd("D:/Programming/R/Basic")
getwd()
inputfile <- read.table("test.txt",header = FALSE)
View(inputfile)
any(grepl("XLConnect",installed.packages()))
install.packages("XLConnect")
GM <- read.table("genomicMatrix")
View(GM)
GM
GM <- read.table("genomicMatrix",header=TRUE)
a <- GM[,1]
a
b <- average(GM[,2:183])
c <- rowMeans(GM)
c <- rowMeans(GM[,2:])
c <- rowMeans(GM[,2:183])
c
c[1,]
c[1]
write.table(c,file="test1.csv")
write.table(c[,2],file="test1.csv")
write.table(b+c,file="test1.csv")
write.table(b,file="test2.csv")
write.table(GM[,1],file="test2.csv")
GM2 <- read.table("genomeMatrix",header=TRUE)
GM2 <- read.table("genomicMatrix",header=TRUE)
View(GM2)
c <- rowMeans(GM2[,2:183])
write.table(rowMeans(GM2[,2:183]),file="test3.csv")
write.table(rowMeans(GM2[,1]),file="test4.csv")
write.table(GM2[,1],file="test4.csv")
install.packages("cgdsr")
install.packages("bioconductor")
install.packages("readxl")
install.packages("rjson")
GM <- read.table("genomicMatrix")
write.table(GM,file = "genomicMatrix.csv")
library(readxl)
GM2 <- read_excel("genomicMatrix.csv")
GM2 <- read_excel("genomicMatrix.xlsx")
warnings()
inputfile <- read_excel(file = "test.xlsx",header = TRUE)
inputfile <- fromJSON(file = "test.json")
library(rjson)
inputfile <- fromJSON(file = "test.json")
inputfile <- fromJSON("test.json")
inputfile <- fromJSON("test.json")
inputfile <- fromJSON(file = "test.json")
install.packages("XML")
library(XML)
inputfile <- xmlTreeParse("URL")
library(XML)
inputfile <- xmlTreeParse("http://www.csdn.net/tag/xml")
class(inputfile)
topxml <- xmlRoot(inputfile)
library(XML)
inputfile <- xmlTreeParse("http://www.w3school.com.cn/example/xmle/note.xml")
class(inputfile)
topxml <- xmlRoot(inputfile)
topxml
topxml <- xmlSApply(topxml,)
topxml <- xmlSApply(topxml,function(x) xmlSApply(x,xmlValue))
topxml
t(topxml)
data.frame(t(topxml),row.names = NULL)
inputfile <- xmlToDataFrame("URL")
inputfile <- xmlToDataFrame("http://www.w3school.com.cn/example/xmle/note.xml")
inputfile
install.packages("foreign")
test.sav
inputfile <- read.spss("test.sav", o.data.frame=TRUE, use.value.labels=FALSE)
library(foreign)
library(foreign)
inputfile <- read.spss("test.sav", o.data.frame=TRUE, use.value.labels=FALSE)
inputfile <- read.spss("test.sav", to.data.frame=TRUE, use.value.labels=FALSE)
inputfile <- readHTMLTable("URL",which=3)
library()
install.packages("sas7bdat")
install.packages("dplyr")
install.packages("dplyr")
value <- c(1,2,3)
Name <- I(c("赵","钱","孙"))
Birth <- as.Date(c("1990-10-1","1989-6-4","1987-4-10"))
Info <- data.frame(Name,Birth,value)
info
Info
str(Info)
View(Info)
#录入list
value <- c(1,2,3)
Name <- I(c("赵","钱","孙")) #避免被转化为vector
Birth <- as.Date(c("1990-10-1","1989-6-4","1987-4-10")) #保持日期格式
Info <- data.frame(Name,Birth,value)
head(Info)
tail(Info)
names(Info)
names(info) <- c("","","")
names(Info) <- c("","","")
names(Info)
head(Info)
tail(Info)
names(Info) <- c("Name", "Birth")
head(Info)
tail(Info)
names(Info) <- c("Name", "Birth","Value")
head(Info)
tail(Info)
colnames(Info)
rownames(Info)
colnames(Info) <-c(colname(Info)[0],"",colnames(Info)[2])
colnames(Info) <-c(colnames(Info)[0],"",colnames(Info)[2])
head(Info)
tail(Info)
names(Info) <- c("Name", "Birth","Value")
colnames(Info) <-c(colnames(Info)[1],"",colnames(Info)[3])
head(Info)
tail(Info)
names(Info) <- c("Name", "Birth","Value")
dim()
dim(Info)
value <- c(1,2,3,4)
Name <- I(c("赵","钱","孙","李")) #避免被转化为vector
Birth <- as.Date(c("1990-10-1","1989-6-4","1987-4-10","1986-9-9")) #保持日期格式
#list合并为data frame
Info <- data.frame(Name,Birth,value)
#快速头尾查看内容
head(Info)
tail(Info)
dim(Info)
dim(Info)[1]
#查看列数
dim(Info)[2]
nrow(Info)
length(Info)
ncol(Info)
Info$Name
data_value <- c(1,2,3,4)
data_Name <- I(c("赵","钱","孙","李")) #避免被转化为vector
data_Birth <- as.Date(c("1990-10-1","1989-6-4","1987-4-10","1986-9-9")) #保持日期格式
#list合并为data frame
Info <- data.frame(data_Name,data_Birth,data_value)
#快速头尾查看内容
head(Info)
tail(Info)
Info$data_Name
rownames(Info)
colnames(Info)
Info[1,]
Info[,1]
Info$data_Birth[2]
Info[2,2]
Info[,2] <- Info[,2]-1
Info
Info +1
Info[,2] <- Info[,2]-20
Info
search()
attach()
attach(Info)
Info
search()
info[,1:2]
Info[,1:2]
Info
apply(Info, 3, median)
apply(Info, 2, median)
apply(Info, 3, mean)
apply(Info, 1, mean)
apply(Info[,3], 2, mean)
